{"version":3,"file":"static/js/register-page.0376be82.chunk.js","mappings":"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","sources":["components/Register/Register.jsx","pages/RegisterPage.jsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../redux/auth/operations';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!name || !email || !password) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    try {\n      dispatch(signUp({ name, email, password }));\n\n      setName('');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      setError('An error occurred. Please try again later.');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '5rem',\n        }}\n      >\n        <Typography variant=\"h4\" gutterBottom>\n          Register\n        </Typography>\n\n        {error && (\n          <Typography variant=\"body2\" color=\"error\" gutterBottom>\n            {error}\n          </Typography>\n        )}\n\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          autoComplete=\"on\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            maxWidth: '400px',\n            '& .MuiTextField-root': {\n              marginBottom: '1rem',\n            },\n          }}\n        >\n          <TextField\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            label=\"Name\"\n            placeholder=\"Enter name\"\n            required\n          />\n\n          <TextField\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            label=\"Email\"\n            placeholder=\"Enter email\"\n            required\n          />\n\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            label=\"Password\"\n            placeholder=\"Enter password\"\n            required\n          />\n\n          <Button type=\"submit\" variant=\"outlined\" fullWidth>\n            Register\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;\n","import Register from \"components/Register/Register\";\n\nconst RegisterPage = () => {\n\n    return (\n        <div>\n            <Register />\n        </div>\n    );\n}\n\nexport default RegisterPage;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","error","setError","handleChange","event","_event$target","target","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","abrupt","signUp","stop","_x","apply","arguments","_jsx","Container","maxWidth","children","_jsxs","Box","sx","display","flexDirection","alignItems","marginTop","Typography","variant","gutterBottom","color","component","onSubmit","autoComplete","width","marginBottom","TextField","type","onChange","label","placeholder","required","Button","fullWidth","Register","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","theme","_extends","marginLeft","boxSizing","marginRight","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref4","Math","max","xs","React","ref","className","_props$component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","styled"],"sourceRoot":""}